version: '3.8'

services:



    frontend:
        container_name: ui_frontend
        build:
            context: ./ui-app
            dockerfile: Dockerfile
        tty: true
        volumes:
            - ./ui-app/frontend:/app
        ports:
            - 3001:3000
        depends_on:
            - symfony
        networks:
            - dev

    symfony:
        container_name: symfony_docker
        build: 
            context: ./symfony_config
            dockerfile: Dockerfile
        ports:
            - "8245:80"
        volumes:
            - ./symfony_config/vhosts:/etc/apache2/sites-enabled
            - ./symfony_project:/var/www/html
        restart: always
        networks:
            - dev
        depends_on:
          - db

    db:
        image: mariadb:10.8.2
        container_name: mariadb_docker
        restart: always
        volumes:
            - db-data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: 'db_datas'
            MYSQL_USER: root
            MYSQL_PASSWORD: root
        networks:
            - dev

    phpmyadmin:
        image: phpmyadmin:latest
        container_name: phpmyadmin_docker
        restart: always
        depends_on:
            - db
        ports:
            - "8080:80"
        environment:
            - PMA_HOST=db
            - PMA_PASSWORD=root
        networks:
            - dev

    caddy:
        image: dunglas/mercure
        restart: unless-stopped
        container_name: mercure_docker
        environment:
            # Uncomment the following line to disable HTTPS
            SERVER_NAME: ':80'
            MERCURE_PUBLISHER_JWT_KEY: '!ChangeMe!'
            MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeMe!'
            MERCURE_EXTRA_DIRECTIVES:
                cors_origins "http://localhost:3000"
                cors_origins "http://localhost:8245"
        # anonymous
        # Uncomment the following line to enable the development mode
        command: /usr/bin/caddy run -config /etc/caddy/Caddyfile.dev
        ports:
            - "9090:80"
            # - "443:443"
        volumes:
           - caddy_data:/data
           - caddy_config:/config
        networks:
            - dev




networks:
    dev:

volumes:
    db-data:
    caddy_data:
    caddy_config: